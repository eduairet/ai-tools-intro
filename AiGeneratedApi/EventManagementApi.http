@EventManagementApi_HostAddress = http://localhost:5045

### Weather forecast (sample)
GET {{EventManagementApi_HostAddress}}/weatherforecast/
Accept: application/json

###

### Register a new user
POST {{EventManagementApi_HostAddress}}/api/v1/users/register
Content-Type: application/json

{
  "userName": "testuser",
  "email": "testuser@example.com",
  "password": "testpassword"
}

###

### Login and get JWT token
POST {{EventManagementApi_HostAddress}}/api/v1/users/login
Content-Type: application/json

{
  "email": "testuser@example.com",
  "password": "testpassword"
}

###

### Refresh JWT token
POST {{EventManagementApi_HostAddress}}/api/v1/users/refresh
Content-Type: application/json

{
  "accessToken": "{{jwt_token}}",
  "refreshToken": "{{refresh_token}}"
}

###

### Get all events (public)
GET {{EventManagementApi_HostAddress}}/api/v1/events
Accept: application/json

###

### Get a single event by ID (public)
GET {{EventManagementApi_HostAddress}}/api/v1/events/{eventId}
Accept: application/json

###

### Create a new event (requires Bearer token)
POST {{EventManagementApi_HostAddress}}/api/v1/events
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "title": "Sample Event",
  "description": "This is a test event.",
  "date": "2024-07-01T18:00:00Z",
  "location": "Online",
  "imageUrl": "/temp/sample.jpg"
}

###

### Update an event (requires Bearer token)
PUT {{EventManagementApi_HostAddress}}/api/v1/events/{eventId}
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "title": "Updated Event Title",
  "description": "Updated description.",
  "date": "2024-07-02T18:00:00Z",
  "location": "Updated Location",
  "imageUrl": "/temp/updated.jpg"
}

###

### Delete an event (requires Bearer token)
DELETE {{EventManagementApi_HostAddress}}/api/v1/events/{eventId}
Authorization: Bearer {{jwt_token}}

###

### Upload an image for an event (requires Bearer token)
POST {{EventManagementApi_HostAddress}}/api/v1/events/{eventId}/image
Authorization: Bearer {{jwt_token}}
Content-Type: multipart/form-data; boundary=WebAppBoundary

--WebAppBoundary
Content-Disposition: form-data; name="file"; filename="sample.jpg"
Content-Type: image/jpeg

< ./sample.jpg
--WebAppBoundary--

###

### Register for an event (requires Bearer token)
POST {{EventManagementApi_HostAddress}}/api/v1/eventsregistration?eventId={eventId}
Authorization: Bearer {{jwt_token}}

###

### Unregister from an event (requires Bearer token)
DELETE {{EventManagementApi_HostAddress}}/api/v1/eventsregistration?eventId={eventId}
Authorization: Bearer {{jwt_token}}

###

### Get all registrations (admin, requires Bearer token)
GET {{EventManagementApi_HostAddress}}/api/v1/events-registrations
Authorization: Bearer {{jwt_token}}
Accept: application/json

###

### Get a registration by ID (admin, requires Bearer token)
GET {{EventManagementApi_HostAddress}}/api/v1/events-registrations/{registrationId}
Authorization: Bearer {{jwt_token}}
Accept: application/json

###
